package ivmod;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * gui.java
 *
 * Created on Nov 17, 2011, 4:06:22 PM
 */
/**
 *
 * @author sheldon.chi
 */

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;



/**
 * 
 * @author sheldon.chi
 */
public class PitGUI extends javax.swing.JFrame {

    int ready=0;
    String vmg,vmp,xyzFile,ijkFile;
    String rootPath;
    ArrayList<Integer> a;
    model theModel;
    ModelPanel panel;
    
//    static String vmg = null; static String vmp = null;

    /** Creates new form gui */
    public PitGUI() {
        initComponents();
    }
    
    public PitGUI(String rootPathIn) {
        initComponents();
        rootPath = rootPathIn;
        textField.setText("Project directory is:  \n" +rootPath);
        
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jFileChooser1 = new javax.swing.JFileChooser();
        BuildPitButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        textField1 = new java.awt.TextField();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        drainNumberComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textField2 = new java.awt.TextField();
        ViewerButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ijkButton = new javax.swing.JButton();
        textField3 = new java.awt.TextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textField = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pit Maker");
        setLocationByPlatform(true);
        setResizable(false);

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        BuildPitButton.setText("Build the Pit!");
        BuildPitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuildPitButtonActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Input"));

        textField1.setEditable(false);
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });

        jButton3.setText("Choose File");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Pit xyz file");

        drainNumberComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        drainNumberComboBox.setSelectedIndex(8);

        jLabel3.setText("Drain group number");

        jButton1.setText("Choose File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("VMG file");

        textField2.setEditable(false);
        textField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField2ActionPerformed(evt);
            }
        });

        ViewerButton.setText("View it");
        ViewerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewerButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("IJK file exported from vmod");

        ijkButton.setText("Choose file");
        ijkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ijkButtonActionPerformed(evt);
            }
        });

        textField3.setEditable(false);
        textField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(26, 26, 26)
                        .addComponent(ijkButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(ViewerButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(30, 30, 30)
                        .addComponent(jButton1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(drainNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ViewerButton)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(drainNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ijkButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Log"));

        textField.setColumns(20);
        textField.setEditable(false);
        textField.setRows(5);
        jScrollPane1.setViewportView(textField);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(BuildPitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BuildPitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            jFileChooser1.setFileFilter(new vmG_Filter());
            int returnVal = jFileChooser1.showDialog(null, "Open");

    
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String fileName = jFileChooser1.getSelectedFile().getPath();
            this.vmg = fileName;
            textField.append("\n"+"VMG file selected: \n"+fileName);
            textField2.setText(fileName);
           // jButton4.setEnabled(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void BuildPitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuildPitButtonActionPerformed

        if(this.vmg!=null && this.vmg.length()!=0 && this.xyzFile!=null && this.xyzFile.length()!=0 && this.ijkFile!=null && this.ijkFile.length()!=0)
        {
            int xyzStatus = this.checkAndPrintXYZ(this.xyzFile, this.rootPath+"\\input\\xyz.dat");
            if (xyzStatus < 0) return;
            this.updateTextField("\nxyz file checked and de-E-ed");

            
            a = GetDimensionFromVMG.go(this.vmg);
            
            model theModel = new model(a.get(0),a.get(1),a.get(2), this.rootPath,this);
      //      this.updateTextField("\nReading VMG file");
            theModel.readVMG(this.vmg);
            System.out.println(this.rootPath+"\\input\\modelgrid.dat");
        //     this.updateTextField("\nMaking modelgrid.dat ");
            theModel.printModelGridFile(this.ijkFile,this.rootPath+"\\input\\modelgrid.dat");
            theModel.printIbound(this.rootPath+"\\input\\ibound.txt");
            this.updateTextField("\nIBOUND done");
           
            this.printParameters(this.rootPath+"\\input\\parameters.dat");
         

            try {
                String path = this.rootPath+"\\bin\\run.bat";
             //   String[] go = {"cmd", "/c", "start","\"Pit Maker\"",path};
                  String[] go = {"cmd", "/c",path};
                System.out.println(path);
                Process p = Runtime.getRuntime().exec(go, null, new File(this.rootPath+"\\bin\\"));
                int status = p.waitFor();
                System.out.println(status);
//                if(status==0) PitGUI.copyfile(this.rootPath+"\\temp\\added_VMB.DAT",this.rootPath+"\\temp\\VMB.DAT");
                if(status==0)
                {
                    PitGUI.mergefile(this.rootPath+"\\temp\\VMB.DAT",this.rootPath+"\\temp\\added_VMB.DAT",this.rootPath+"\\pit.vmb");
                    this.updateTextField("\n vmb file with pit (pit only, no existing drains) created in "+this.rootPath);
                }
               
            }
            catch (Exception e) 
            {
                e.printStackTrace();
            }

            
            theModel.writeNewVMG(this.vmg,this.rootPath+"\\temp\\New_ibnd.DAT",this.rootPath+"\\NewIboundInside.vmg");
            this.updateTextField("\n NewIboundInside.vmg with pit ibound created in "+this.rootPath);
            
           


        }else
        {
            JOptionPane.showMessageDialog(null, "Missing xyz,vmg and/or ijk file");
        }
        
//       MiniViewer.main(null);
        
        // String argu[] = null;
      //  JavaApplication2.go();       
        ready = 1;// TODO add your handling code here:
    }//GEN-LAST:event_BuildPitButtonActionPerformed

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1ActionPerformed

    private void ViewerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewerButtonActionPerformed
        if(this.vmg!=null && this.vmg.length()!=0 )
        {
            
            //theModel=null;panel=null;
            //System.gc();
            a = GetDimensionFromVMG.go(this.vmg);
            
            
            theModel = new model(a.get(0),a.get(1),a.get(2)); 
            theModel.readVMG(this.vmg);
            
            // display ibound 
            final JFrame frame;
            frame = new JFrame("IBOUND");
            frame.setLocationRelativeTo(null);
            int w = 1000;
            int h = 1000;
            frame.setSize(w + 100, 200 + h);
            panel = new ModelPanel(theModel);
            JPanel viewer = new Viewer(panel);
            frame.getContentPane().add(viewer);
            frame.setVisible(true);
            frame.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosing(WindowEvent e) {
                        frame.setVisible(false);
                        frame.removeAll();
                        frame.dispose();
                    }
                });
         
            
        }else
        {
            JOptionPane.showMessageDialog(null, "choose a vmg file first");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ViewerButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    //    jFileChooser1.setFileFilter(new vmG_Filter());
        jFileChooser1.setFileFilter(null);
            int returnVal = jFileChooser1.showDialog(null, "Open");

    
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String fileName = jFileChooser1.getSelectedFile().getPath();
            this.xyzFile = fileName;
            textField.append("\n"+"xyz file selected: \n"+fileName);
            textField1.setText(fileName);
           // jButton4.setEnabled(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void textField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField2ActionPerformed

    private void textField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField3ActionPerformed

    private void ijkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ijkButtonActionPerformed
        // TODO add your handling code here:
        jFileChooser1.setFileFilter(null);
        int returnVal = jFileChooser1.showDialog(null, "Open");


        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String fileName = jFileChooser1.getSelectedFile().getPath();
            this.ijkFile = fileName;
            textField.append("\n" + "ijk file selected: \n" + fileName);
            textField3.setText(fileName);
            // jButton4.setEnabled(true);
        }

        
    }//GEN-LAST:event_ijkButtonActionPerformed


   


    
    public void updateTextField(String s)
    {
        textField.append(s);
    }
    
    public void printParameters(String fname)
    {

        try {
          //  BufferedReader in = new BufferedReader(new FileReader(fin));
          //  String strRead;
            PrintWriter out = new PrintWriter(new FileOutputStream(fname));  
            
            
            a = GetDimensionFromVMG.go(this.vmg);
            out.println(a.get(0));
            out.println(a.get(1));
            out.println(a.get(2));
            out.println(drainNumberComboBox.getSelectedItem());
            
            out.close();
            System.out.println("parameter file was created");

        } catch (FileNotFoundException e) {
            System.out.println("File not found !");
        } catch (IOException ioe) {
            System.out.println("IO exception");
        }        
    }

    public int checkAndPrintXYZ(String fin, String fout) {

        try {
            BufferedReader in = new BufferedReader(new FileReader(fin));
            String strRead;
            PrintWriter out = new PrintWriter(new FileOutputStream(fout));
            Pattern pattern = Pattern.compile("[\t, ]+");

            int fileLength = count(fin);
            
            out.println("nblocks");
            out.println(fileLength);
            out.println("cond");
            out.println("10");
                    
            
            while ((strRead = in.readLine()) != null) {

                String[] splitarray = pattern.split(strRead.trim()); // trimmed
                
                if(splitarray.length!=3)
                {
                    JOptionPane.showMessageDialog(null, "xyz file incorrect format, should be 3 columns in each line");
                    this.updateTextField("/n Incorrect format - xyz file");
                  //  System.exit(1);
                  //  break;
                    
                    return -1;
                  }
                
                if(strRead.contains("E")) continue;
                
                
                
                out.println(strRead);
                    
            }
            in.close();
            out.close();
            

        } catch (FileNotFoundException e) {
            System.out.println("File not found !");
        } catch (IOException ioe) {
            System.out.println("IO exception");
        }   
        
        return 0;
    }
    
    public int count(String filename) throws IOException {
    InputStream is = new BufferedInputStream(new FileInputStream(filename));
    try {
        byte[] c = new byte[1024];
        int count = 0;
        int countE=0;
        int counte=0;
        int readChars = 0;
        boolean empty = true;
        while ((readChars = is.read(c)) != -1) {
            empty = false;
            for (int i = 0; i < readChars; ++i) {
                if (c[i] == '\n')
                    ++count;
                if (c[i]=='E')
                    ++countE;
                if (c[i]=='e')
                    ++counte;
            }
        }
        return (count == 0 && !empty) ? 1 : count-countE-counte;
    } finally {
        is.close();
    }
}
  
	private static void copyfile(String srFile, String dtFile){
		try{
			File f1 = new File(srFile);
			File f2 = new File(dtFile);
			InputStream in = new FileInputStream(f1);
			
			//For Append the file.
			OutputStream out = new FileOutputStream(f2,true);

			//For Overwrite the file.
	//		OutputStream out = new FileOutputStream(f2);

			byte[] buf = new byte[1024];
			int len;
			while ((len = in.read(buf)) > 0){
				out.write(buf, 0, len);
			}
			in.close();
			out.close();
			System.out.println("File copied.");
		}
		catch(FileNotFoundException ex){
			System.out.println(ex.getMessage() + " in the specified directory.");
			//System.exit(0);
		}
		catch(IOException e){
			System.out.println(e.getMessage());			
                }
        }

        
	private static void mergefile(String srFile,String srFile2, String dtFile){
		try{
			File s1 = new File(srFile);
                        File s2 = new File(srFile2);
			File f2 = new File(dtFile);
			InputStream in1 = new FileInputStream(s1);
                        InputStream in2 = new FileInputStream(s2);
			
			//For Append the file.
//			OutputStream out = new FileOutputStream(f2,true);

			//For Overwrite the file.
			OutputStream out = new FileOutputStream(f2);

			byte[] buf = new byte[1024];
			int len;
			while ((len = in1.read(buf)) > 0){
				out.write(buf, 0, len);
			}
			in1.close();
                        
                        
                                              
			while ((len = in2.read(buf)) > 0){
				out.write(buf, 0, len);
			}
			in2.close();
                                                
                        
                        
			out.close();
			System.out.println("Merged to 3rd file.");
		}
		catch(FileNotFoundException ex){
			System.out.println(ex.getMessage() + " in the specified directory.");
			//System.exit(0);
		}
		catch(IOException e){
			System.out.println(e.getMessage());			
                }
        }       
     
   
        
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new PitGUI().setVisible(true);

            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuildPitButton;
    private javax.swing.JButton ViewerButton;
    private javax.swing.JComboBox drainNumberComboBox;
    private javax.swing.JButton ijkButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textField;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    private java.awt.TextField textField3;
    // End of variables declaration//GEN-END:variables


}
